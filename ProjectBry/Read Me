* Important things to know
    • Always Add the ProjectBry Folder and src file
    • Follow the Path Order when creating a New Page Folder (Project Folder/Module Folders/Files Folders)

* For the Dark Mode Style:

    • Import "ProjectBry/CSS/PBStyle" to your scss file(Take note: Follow your path)
    • Add this htlm(to your prefer section but highly suggest on the top part of your html):
    • Take note of the src path base on your folder structure

    <div class="containerRB">
        <button
            id="darkModeToggleRB"
            onclick="controller_Btn_DarkMode()"
            title="Toggle light/dark mode"
            data-light-img="../../src/light-mode.png"
            data-dark-img="../../src/night-mode.png"
            style="background-image: url('../../src/light-mode.png'); background-size: cover; background-position: center; background-repeat: no-repeat;">
        </button>
    </div>

    <script type="module" src="./ProjectBry/Scripts/Controller_Btn_DarkMode.js"></script>

    • You can always change the icons(.png/.jpg) according to your likings. Keep in mind that the background image serves as the default icon when the window first loads. Be sure to set the correct path based on your folder structure.

    • Codes needed 
        Take notes of the comments here

:root {
    --RB-darkmode-background-color: #333333; /* Set background color for dark mode */
    --button-size: 30px;             /* Change value for height size */
    --button-position-from-top: 50px; /* Change the position of the button from top */
    --button-position-from-right: 10px; /* Change the position of the button from right */
    
    --text-color: white; /* Change the Text color when dark mode is active */
    --button-border-radius: 10px;

    /* Change the Button color on hover when dark mode is on */
    --button-background-color-on: rgba(255, 255, 255, 0.3);

    /* Change the Button color on hover when dark mode is off */
    --button-background-color-off: rgba(0, 0, 0, 0.1);
}


* Adding Backgrounds for Specific Elements in Dark Mode: 

    • If you have elements (e.g., classes or IDs) with their own backgrounds that you want to include in dark mode, simply add the following CSS rules to change their background when dark mode is activated:


    • For an ID (e.g., #forId):

    body.dark-mode #forId {
        background-color: #333333; /* Set background color for dark mode */
    }

    • For a class (e.g., .forClass):

    body.dark-mode .forClass {
        background-color: #333333;  /* Set background color for dark mode */
    }

*   If you want to apply the same background color to both an ID and a class in one rule, you can do it like this:

    • 

        body.dark-mode #forId, 
        body.dark-mode .forClass {
            background-color: #333333; /* Set background color for dark mode */
            color: red;
        }

    • You can continue to follow this structure for other elements as needed.


    • If you also want to change the color of the texts in the specific element just add the color in the code. See the guide below:

    body.dark-mode #forId {
        background-color: #333333; /* Set background color for dark mode */
        color: red;                /* Set text color for dark mode */
    }

    • For a class (e.g., .forClass):

    body.dark-mode .forClass {
        background-color: #333333;  /* Set background color for dark mode */
        color: red;                /* Set text color for dark mode */
    }


* For the RB Button:

    • Import "ProjectBry/CSS/ButtonRBStyles" to your scss file(Take note: Follow your path)
    • Add this htlm(to your prefer section but highly suggest on the top part of your html):
    • Take note of the src path base on your folder structure


    <div class="button-container-RB">
        <button 
            id="customButtonRB" 
            class="custom-button-RB" 
            style="background: url('./src/turquoise bg button.png') no-repeat center center; background-size: cover;"
            onclick="controller_Btn_ButtonRB()">
            <span class="button-text-RB">Click Me</span>
            <img src="./src/light-mode.png" alt="Button Icon" class="button-icon-RB">
        </button>
    </div>


    • Optional script (from testing the button)
    
    <script type="module"  src="./ProjectBry/Scripts/Controller_Btn_ButtonRB.js"></script>

    • Codes needed 
        Take notes of the comments here

:root {
    /* Button Designing */
    --button-bg-color-RB: none; /* Button background color */
    --button-text-color-RB: black; /* Button text color */
    --button-font-RB: Arial, sans-serif; /* Font for the button text */
    --button-padding-RB: 12px 16px; /* Padding of the button */
    --button-border-radius-RB: 20px; /* Border radius of the button */
    --button-icon-size-RB: 10px; /* Icon size */
    --button-font-size-RB: 16px; /* Font size of the text */
    --button-icon-margin-left-RB: 8px; /* Space between icon and text */

    /* Button positioning */
    --buttonRB-from-top: 50px;
    --buttonRB-from-left: 50px;


    /* 3D Effect Section */
    --button-shadow-normal: 0px 4px 6px rgba(0, 0, 0, 0.3), 0px 1px 3px rgba(0, 0, 0, 0.1); /* Normal shadow */
    --button-shadow-hover: 0px 12px 24px rgba(0, 0, 0, 0.3), 0px 6px 12px rgba(0, 0, 0, 0.1); /* Hover shadow */
    --button-shadow-active: 0px 2px 4px rgba(0, 0, 0, 0.2), 0px 1px 3px rgba(0, 0, 0, 0.1); /* Active shadow */
    --button-hover-scale: 1.1; /* Button scale on hover */
    --button-active-scale: 0.95; /* Button scale when clicked */
}

* Note: To disable to 3D effect just simple delete the 3D Effect Section then change the backgroung color and border radius (--button-bg-color-RB: none; / --button-border-radius-RB: 20px;). You can also delete or change the background image in the html (style="background: url('./src/turquoise bg button.png') no-repeat center center; background-size: cover;")"


* For the CatButtonStyles:

    • Import "ProjectBry/CSS/CatButtonRBStyles" to your scss file(Take note: Follow your path)
    • Add this htlm:

    <div class="cat-buttonRB-container">
        <button class="category-buttonRB">Category Button 1</button>
        <button class="category-buttonRB">Category Button 2</button>
        <button class="category-buttonRB">Category Button 3</button>
        <button class="category-buttonRB">Category Button 4</button>
    </div>

    • Codes needed 
        Take notes of the comments here

* For the appearance of the Category Buttons I have to options for you.

• Option 1: They say simplicity is beauty

:root {
    /* CatRB Button Colors */
    --CatRB-button-border-color: #3498db; /* Light blue border */
    --CatRB-button-text-color: #3498db; /* Text color matches the border */
    --CatRB-button-hover-background: #3498db; /* Background color on hover */
    --CatRB-button-hover-text-color: white; /* Text color on hover */
    --CatRB-button-border-radius: 12px; /* Button border radius */
    
    /* CatRB Button Sizes */
    --CatRB-button-padding: 30px 30px; /* Padding inside the button */
    --CatRB-button-font-size: 16px; /* Font size */
    --CatRB-button-font-weight: bold; /* Font weight */
    
    /* CatRB Box Shadow */
    --CatRB-button-box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.3); /* Shadow effect */
    --CatRB-button-hover-box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.3); /* Hover shadow effect */
    
    /* Other properties */
    --CatRB-container-gap: 20px; /* Spacing between buttons in the container */
    --CatRB-container-top: 20px; /* Top position of the button container */
    --CatRB-container-left: 20px; /* Left position of the button container */
    --CatRB-transition: transform 0.2s, box-shadow 0.2s, background-color 0.3s; /* transition effect */

    /* Layout Control */
    --CatRB-container-layout: row; /* Default layout is row, can be changed to 'column' */
}

• Option 2: Bold & Modern with Gradient

:root {
    /* CatRB Button Colors */
    --CatRB-button-border-color: none; /* Light blue border */
    --CatRB-button-text-color: white; /* Text color matches the border */
    --CatRB-button-border-radius: 12px; /* Button border radius */
    --CatRB-button-background: linear-gradient(135deg, #008b8b, #4a9e9e);
    
    /* CatRB Button Sizes */
    --CatRB-button-padding: 30px 30px; /* Padding inside the button */
    --CatRB-button-font-size: 16px; /* Font size */
    --CatRB-button-font-weight: bold; /* Font weight */
    
    /* CatRB Box Shadow */
    --CatRB-button-box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.3); /* Shadow effect */
    --CatRB-button-hover-box-shadow: 0px 4px 10px rgba(0, 0, 0, 0.3); /* Hover shadow effect */
    
    /* Other properties */
    --CatRB-container-gap: 20px; /* Spacing between buttons in the container */
    --CatRB-container-top: 20px; /* Top position of the button container */
    --CatRB-container-left: 20px; /* Left position of the button container */
    --CatRB-button-hover-text-color: white; /* Text color on hover */

    /* Layout Control */
    --CatRB-container-layout: row; /* Default layout is row, can be changed to 'column' */
}


* Final Notes: 

Make sure to adjust paths to the PBStyle.css and image files based on your project’s folder structure.
You can further customize the appearance of the dark mode by updating the CSS variables and adding additional rules for other elements.
This setup allows you to easily implement dark mode functionality and customize it to fit your project’s needs.